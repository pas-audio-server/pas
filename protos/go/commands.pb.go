// Code generated by protoc-gen-go.
// source: commands.proto
// DO NOT EDIT!

/*
Package pas is a generated protocol buffer package.

It is generated from these files:
	commands.proto

It has these top-level messages:
	GenericPB
	PlayTrackCommand
	PauseDeviceCommand
	ResumeDeviceCommand
	StopDeviceCommand
	TrackQueryCommand
	TimeQueryCommand
	TrackCountQuery
	ArtistCountQuery
	FolderCountQuery
	SelectQuery
	ContentQuery
*/
package pas

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Type int32

const (
	Type_GENERIC           Type = 0
	Type_PLAY_TRACK_DEVICE Type = 1
	Type_PAUSE_DEVICE      Type = 2
	Type_RESUME_DEVICE     Type = 3
	Type_STOP_DEVICE       Type = 4
	Type_WHO_DEVICE        Type = 5
	Type_WHAT_DEVICE       Type = 6
	Type_TRACK_COUNT       Type = 7
	Type_ARTIST_COUNT      Type = 8
	Type_FOLDER_COUNT      Type = 9
	Type_SELECT_QUERY      Type = 10
	Type_CONTENT_QUERY     Type = 11
	Type_WHEN_DEVICE       Type = 12
)

var Type_name = map[int32]string{
	0:  "GENERIC",
	1:  "PLAY_TRACK_DEVICE",
	2:  "PAUSE_DEVICE",
	3:  "RESUME_DEVICE",
	4:  "STOP_DEVICE",
	5:  "WHO_DEVICE",
	6:  "WHAT_DEVICE",
	7:  "TRACK_COUNT",
	8:  "ARTIST_COUNT",
	9:  "FOLDER_COUNT",
	10: "SELECT_QUERY",
	11: "CONTENT_QUERY",
	12: "WHEN_DEVICE",
}
var Type_value = map[string]int32{
	"GENERIC":           0,
	"PLAY_TRACK_DEVICE": 1,
	"PAUSE_DEVICE":      2,
	"RESUME_DEVICE":     3,
	"STOP_DEVICE":       4,
	"WHO_DEVICE":        5,
	"WHAT_DEVICE":       6,
	"TRACK_COUNT":       7,
	"ARTIST_COUNT":      8,
	"FOLDER_COUNT":      9,
	"SELECT_QUERY":      10,
	"CONTENT_QUERY":     11,
	"WHEN_DEVICE":       12,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}
func (Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GenericPB struct {
	Type Type `protobuf:"varint,1,opt,name=type,enum=pas.Type" json:"type,omitempty"`
}

func (m *GenericPB) Reset()                    { *m = GenericPB{} }
func (m *GenericPB) String() string            { return proto.CompactTextString(m) }
func (*GenericPB) ProtoMessage()               {}
func (*GenericPB) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GenericPB) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_GENERIC
}

type PlayTrackCommand struct {
	Type     Type   `protobuf:"varint,1,opt,name=type,enum=pas.Type" json:"type,omitempty"`
	DeviceId uint64 `protobuf:"varint,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	TrackId  uint64 `protobuf:"varint,3,opt,name=track_id,json=trackId" json:"track_id,omitempty"`
}

func (m *PlayTrackCommand) Reset()                    { *m = PlayTrackCommand{} }
func (m *PlayTrackCommand) String() string            { return proto.CompactTextString(m) }
func (*PlayTrackCommand) ProtoMessage()               {}
func (*PlayTrackCommand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PlayTrackCommand) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_GENERIC
}

func (m *PlayTrackCommand) GetDeviceId() uint64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *PlayTrackCommand) GetTrackId() uint64 {
	if m != nil {
		return m.TrackId
	}
	return 0
}

type PauseDeviceCommand struct {
	Type     Type   `protobuf:"varint,1,opt,name=type,enum=pas.Type" json:"type,omitempty"`
	DeviceId uint64 `protobuf:"varint,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
}

func (m *PauseDeviceCommand) Reset()                    { *m = PauseDeviceCommand{} }
func (m *PauseDeviceCommand) String() string            { return proto.CompactTextString(m) }
func (*PauseDeviceCommand) ProtoMessage()               {}
func (*PauseDeviceCommand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PauseDeviceCommand) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_GENERIC
}

func (m *PauseDeviceCommand) GetDeviceId() uint64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

type ResumeDeviceCommand struct {
	Type     Type   `protobuf:"varint,1,opt,name=type,enum=pas.Type" json:"type,omitempty"`
	DeviceId uint64 `protobuf:"varint,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
}

func (m *ResumeDeviceCommand) Reset()                    { *m = ResumeDeviceCommand{} }
func (m *ResumeDeviceCommand) String() string            { return proto.CompactTextString(m) }
func (*ResumeDeviceCommand) ProtoMessage()               {}
func (*ResumeDeviceCommand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ResumeDeviceCommand) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_GENERIC
}

func (m *ResumeDeviceCommand) GetDeviceId() uint64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

type StopDeviceCommand struct {
	Type     Type   `protobuf:"varint,1,opt,name=type,enum=pas.Type" json:"type,omitempty"`
	DeviceId uint64 `protobuf:"varint,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
}

func (m *StopDeviceCommand) Reset()                    { *m = StopDeviceCommand{} }
func (m *StopDeviceCommand) String() string            { return proto.CompactTextString(m) }
func (*StopDeviceCommand) ProtoMessage()               {}
func (*StopDeviceCommand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *StopDeviceCommand) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_GENERIC
}

func (m *StopDeviceCommand) GetDeviceId() uint64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

type TrackQueryCommand struct {
	Type     Type   `protobuf:"varint,1,opt,name=type,enum=pas.Type" json:"type,omitempty"`
	DeviceId uint64 `protobuf:"varint,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
}

func (m *TrackQueryCommand) Reset()                    { *m = TrackQueryCommand{} }
func (m *TrackQueryCommand) String() string            { return proto.CompactTextString(m) }
func (*TrackQueryCommand) ProtoMessage()               {}
func (*TrackQueryCommand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *TrackQueryCommand) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_GENERIC
}

func (m *TrackQueryCommand) GetDeviceId() uint64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

type TimeQueryCommand struct {
	Type     Type   `protobuf:"varint,1,opt,name=type,enum=pas.Type" json:"type,omitempty"`
	DeviceId uint64 `protobuf:"varint,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
}

func (m *TimeQueryCommand) Reset()                    { *m = TimeQueryCommand{} }
func (m *TimeQueryCommand) String() string            { return proto.CompactTextString(m) }
func (*TimeQueryCommand) ProtoMessage()               {}
func (*TimeQueryCommand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *TimeQueryCommand) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_GENERIC
}

func (m *TimeQueryCommand) GetDeviceId() uint64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

type TrackCountQuery struct {
	Type Type `protobuf:"varint,1,opt,name=type,enum=pas.Type" json:"type,omitempty"`
}

func (m *TrackCountQuery) Reset()                    { *m = TrackCountQuery{} }
func (m *TrackCountQuery) String() string            { return proto.CompactTextString(m) }
func (*TrackCountQuery) ProtoMessage()               {}
func (*TrackCountQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *TrackCountQuery) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_GENERIC
}

type ArtistCountQuery struct {
	Type Type `protobuf:"varint,1,opt,name=type,enum=pas.Type" json:"type,omitempty"`
}

func (m *ArtistCountQuery) Reset()                    { *m = ArtistCountQuery{} }
func (m *ArtistCountQuery) String() string            { return proto.CompactTextString(m) }
func (*ArtistCountQuery) ProtoMessage()               {}
func (*ArtistCountQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ArtistCountQuery) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_GENERIC
}

type FolderCountQuery struct {
	Type Type `protobuf:"varint,1,opt,name=type,enum=pas.Type" json:"type,omitempty"`
}

func (m *FolderCountQuery) Reset()                    { *m = FolderCountQuery{} }
func (m *FolderCountQuery) String() string            { return proto.CompactTextString(m) }
func (*FolderCountQuery) ProtoMessage()               {}
func (*FolderCountQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *FolderCountQuery) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_GENERIC
}

type SelectQuery struct {
	Type    Type   `protobuf:"varint,1,opt,name=type,enum=pas.Type" json:"type,omitempty"`
	Column  string `protobuf:"bytes,2,opt,name=column" json:"column,omitempty"`
	Pattern string `protobuf:"bytes,3,opt,name=pattern" json:"pattern,omitempty"`
}

func (m *SelectQuery) Reset()                    { *m = SelectQuery{} }
func (m *SelectQuery) String() string            { return proto.CompactTextString(m) }
func (*SelectQuery) ProtoMessage()               {}
func (*SelectQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *SelectQuery) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_GENERIC
}

func (m *SelectQuery) GetColumn() string {
	if m != nil {
		return m.Column
	}
	return ""
}

func (m *SelectQuery) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

type ContentQuery struct {
	Type Type   `protobuf:"varint,1,opt,name=type,enum=pas.Type" json:"type,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
}

func (m *ContentQuery) Reset()                    { *m = ContentQuery{} }
func (m *ContentQuery) String() string            { return proto.CompactTextString(m) }
func (*ContentQuery) ProtoMessage()               {}
func (*ContentQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ContentQuery) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_GENERIC
}

func (m *ContentQuery) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func init() {
	proto.RegisterType((*GenericPB)(nil), "pas.GenericPB")
	proto.RegisterType((*PlayTrackCommand)(nil), "pas.PlayTrackCommand")
	proto.RegisterType((*PauseDeviceCommand)(nil), "pas.PauseDeviceCommand")
	proto.RegisterType((*ResumeDeviceCommand)(nil), "pas.ResumeDeviceCommand")
	proto.RegisterType((*StopDeviceCommand)(nil), "pas.StopDeviceCommand")
	proto.RegisterType((*TrackQueryCommand)(nil), "pas.TrackQueryCommand")
	proto.RegisterType((*TimeQueryCommand)(nil), "pas.TimeQueryCommand")
	proto.RegisterType((*TrackCountQuery)(nil), "pas.TrackCountQuery")
	proto.RegisterType((*ArtistCountQuery)(nil), "pas.ArtistCountQuery")
	proto.RegisterType((*FolderCountQuery)(nil), "pas.FolderCountQuery")
	proto.RegisterType((*SelectQuery)(nil), "pas.SelectQuery")
	proto.RegisterType((*ContentQuery)(nil), "pas.ContentQuery")
	proto.RegisterEnum("pas.Type", Type_name, Type_value)
}

func init() { proto.RegisterFile("commands.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 431 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x94, 0x5d, 0xaf, 0x93, 0x30,
	0x18, 0xc7, 0xdd, 0x19, 0x6e, 0xe3, 0xd9, 0xdc, 0xe9, 0x6a, 0x34, 0x33, 0xc6, 0xc4, 0x70, 0x65,
	0xce, 0xc5, 0xe2, 0xcb, 0x27, 0xc0, 0xae, 0xe7, 0x1c, 0xe2, 0x04, 0x56, 0x3a, 0x4f, 0xce, 0x8d,
	0x0b, 0x42, 0x13, 0x89, 0xe3, 0x25, 0x50, 0x4c, 0xf6, 0x9d, 0xfd, 0x10, 0xd2, 0x0e, 0xbc, 0xdd,
	0x4c, 0xb8, 0xe3, 0xf9, 0xf5, 0xff, 0xd2, 0x42, 0x03, 0xcc, 0xa3, 0x3c, 0x4d, 0xc3, 0x2c, 0xae,
	0x56, 0x45, 0x99, 0xcb, 0x1c, 0x0f, 0x8b, 0xb0, 0xb2, 0x6e, 0xc0, 0xbc, 0x13, 0x99, 0x28, 0x93,
	0xc8, 0xff, 0x8c, 0xdf, 0x80, 0x21, 0x8f, 0x85, 0x58, 0x0e, 0xde, 0x0e, 0xde, 0xcd, 0x3f, 0x9a,
	0xab, 0x46, 0xb0, 0xe2, 0x0d, 0x60, 0x1a, 0x5b, 0x09, 0x20, 0xff, 0x10, 0x1e, 0x79, 0x19, 0x46,
	0xbf, 0xc8, 0x29, 0xeb, 0x8c, 0x05, 0xbf, 0x06, 0x33, 0x16, 0xbf, 0x93, 0x48, 0xec, 0x93, 0x78,
	0x79, 0xd5, 0x68, 0x0c, 0x36, 0x39, 0x01, 0x27, 0xc6, 0xaf, 0x60, 0x22, 0x55, 0x96, 0x5a, 0x1b,
	0xea, 0xb5, 0xb1, 0x9e, 0x9d, 0xd8, 0xf2, 0x01, 0xfb, 0x61, 0x5d, 0x89, 0xb5, 0xd6, 0xf6, 0x50,
	0x66, 0x6d, 0xe1, 0x39, 0x13, 0x55, 0x9d, 0xf6, 0x18, 0xe9, 0xc1, 0x22, 0x90, 0x79, 0xd1, 0x6b,
	0xa0, 0x7e, 0xb9, 0xdb, 0x5a, 0x94, 0xc7, 0x3e, 0x02, 0x5d, 0x40, 0x3c, 0x49, 0x45, 0x6f, 0x79,
	0xef, 0xe1, 0xba, 0xfd, 0xfa, 0x75, 0x26, 0x75, 0xea, 0xb9, 0x3b, 0xf3, 0x01, 0x90, 0x5d, 0xca,
	0xa4, 0x92, 0xff, 0x65, 0xb9, 0xcd, 0x0f, 0xb1, 0x28, 0x2f, 0xb7, 0x7c, 0x87, 0x69, 0x20, 0x0e,
	0x22, 0xba, 0x48, 0x8d, 0x5f, 0xc2, 0x28, 0xca, 0x0f, 0x75, 0x9a, 0xe9, 0xf3, 0x99, 0xac, 0x9d,
	0xf0, 0x12, 0xc6, 0x45, 0x28, 0xa5, 0x28, 0x33, 0x7d, 0x1d, 0x4d, 0xd6, 0x8d, 0x96, 0x0d, 0x33,
	0x92, 0x67, 0x52, 0x5c, 0xb6, 0x1d, 0x8c, 0xc1, 0x68, 0x9c, 0x3f, 0xdb, 0x78, 0xfd, 0x7c, 0xf3,
	0x67, 0x00, 0x86, 0x92, 0xe0, 0x29, 0x8c, 0xef, 0xa8, 0x4b, 0x99, 0x43, 0xd0, 0x13, 0xfc, 0x02,
	0x16, 0xfe, 0xc6, 0x7e, 0xdc, 0x73, 0x66, 0x93, 0x2f, 0xfb, 0x35, 0xfd, 0xe6, 0x10, 0x8a, 0x06,
	0x18, 0xc1, 0xcc, 0xb7, 0x77, 0x01, 0xed, 0xc8, 0x15, 0x5e, 0xc0, 0x33, 0x46, 0x83, 0xdd, 0xd7,
	0x7f, 0x68, 0x88, 0xaf, 0x9b, 0x43, 0x73, 0xcf, 0xef, 0x80, 0x81, 0xe7, 0x00, 0x0f, 0xf7, 0x5e,
	0x37, 0x3f, 0x55, 0x82, 0x87, 0x7b, 0x9b, 0x77, 0x60, 0xa4, 0xc0, 0xa9, 0x88, 0x78, 0x3b, 0x97,
	0xa3, 0xb1, 0xea, 0xb1, 0x19, 0x77, 0x02, 0xde, 0x92, 0x89, 0x22, 0xb7, 0xde, 0x66, 0x4d, 0x59,
	0x4b, 0x4c, 0x45, 0x02, 0xba, 0xa1, 0x84, 0xef, 0xb7, 0x3b, 0xca, 0x1e, 0x11, 0xa8, 0xbd, 0x10,
	0xcf, 0xe5, 0xd4, 0xed, 0xd0, 0xf4, 0x54, 0x45, 0xdd, 0xae, 0x6a, 0xf6, 0x63, 0xa4, 0xff, 0x31,
	0x9f, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x81, 0x36, 0xc5, 0x4e, 0x75, 0x04, 0x00, 0x00,
}
