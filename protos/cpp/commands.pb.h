// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: commands.proto

#ifndef PROTOBUF_commands_2eproto__INCLUDED
#define PROTOBUF_commands_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pas {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_commands_2eproto();
void protobuf_AssignDesc_commands_2eproto();
void protobuf_ShutdownFile_commands_2eproto();

class ArtistCountQuery;
class ClearDeviceCommand;
class DacInfo;
class FolderCountQuery;
class GenericPB;
class OneFloat;
class OneInteger;
class OneString;
class PauseDeviceCommand;
class PlayTrackCommand;
class ResumeDeviceCommand;
class Row;
class SelectQuery;
class SelectResult;
class StopDeviceCommand;
class TrackCountQuery;
class WhatDeviceCommand;
class WhenDeviceCommand;
class WhoDeviceCommand;

enum Type {
  GENERIC = 0,
  PLAY_TRACK_DEVICE = 1,
  PAUSE_DEVICE = 2,
  RESUME_DEVICE = 3,
  STOP_DEVICE = 4,
  WHO_DEVICE = 5,
  WHAT_DEVICE = 6,
  TRACK_COUNT = 7,
  ARTIST_COUNT = 8,
  FOLDER_COUNT = 9,
  SELECT_QUERY = 10,
  WHEN_DEVICE = 12,
  CLEAR_DEVICE = 13,
  SELECT_RESULT = 14,
  ROW = 15,
  ONE_INT = 16,
  ONE_STRING = 17,
  ONE_FLOAT = 18,
  DAC_INFO_COMMAND = 19,
  NEXT_DEVICE = 20,
  Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Type_IsValid(int value);
const Type Type_MIN = GENERIC;
const Type Type_MAX = NEXT_DEVICE;
const int Type_ARRAYSIZE = Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Type_descriptor();
inline const ::std::string& Type_Name(Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Type_descriptor(), value);
}
inline bool Type_Parse(
    const ::std::string& name, Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Type>(
    Type_descriptor(), name, value);
}
// ===================================================================

class Row : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.Row) */ {
 public:
  Row();
  virtual ~Row();

  Row(const Row& from);

  inline Row& operator=(const Row& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Row& default_instance();

  void Swap(Row* other);

  // implements Message ----------------------------------------------

  inline Row* New() const { return New(NULL); }

  Row* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Row& from);
  void MergeFrom(const Row& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Row* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // map<string, string> results = 2;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      results() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_results();

  // @@protoc_insertion_point(class_scope:pas.Row)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      Row_ResultsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > results_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static Row* default_instance_;
};
// -------------------------------------------------------------------

class DacInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.DacInfo) */ {
 public:
  DacInfo();
  virtual ~DacInfo();

  DacInfo(const DacInfo& from);

  inline DacInfo& operator=(const DacInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DacInfo& default_instance();

  void Swap(DacInfo* other);

  // implements Message ----------------------------------------------

  inline DacInfo* New() const { return New(NULL); }

  DacInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DacInfo& from);
  void MergeFrom(const DacInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DacInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // repeated .pas.Row row = 2;
  int row_size() const;
  void clear_row();
  static const int kRowFieldNumber = 2;
  const ::pas::Row& row(int index) const;
  ::pas::Row* mutable_row(int index);
  ::pas::Row* add_row();
  ::google::protobuf::RepeatedPtrField< ::pas::Row >*
      mutable_row();
  const ::google::protobuf::RepeatedPtrField< ::pas::Row >&
      row() const;

  // @@protoc_insertion_point(class_scope:pas.DacInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::pas::Row > row_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static DacInfo* default_instance_;
};
// -------------------------------------------------------------------

class SelectResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.SelectResult) */ {
 public:
  SelectResult();
  virtual ~SelectResult();

  SelectResult(const SelectResult& from);

  inline SelectResult& operator=(const SelectResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectResult& default_instance();

  void Swap(SelectResult* other);

  // implements Message ----------------------------------------------

  inline SelectResult* New() const { return New(NULL); }

  SelectResult* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SelectResult& from);
  void MergeFrom(const SelectResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SelectResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // repeated .pas.Row row = 2;
  int row_size() const;
  void clear_row();
  static const int kRowFieldNumber = 2;
  const ::pas::Row& row(int index) const;
  ::pas::Row* mutable_row(int index);
  ::pas::Row* add_row();
  ::google::protobuf::RepeatedPtrField< ::pas::Row >*
      mutable_row();
  const ::google::protobuf::RepeatedPtrField< ::pas::Row >&
      row() const;

  // @@protoc_insertion_point(class_scope:pas.SelectResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::pas::Row > row_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static SelectResult* default_instance_;
};
// -------------------------------------------------------------------

class GenericPB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.GenericPB) */ {
 public:
  GenericPB();
  virtual ~GenericPB();

  GenericPB(const GenericPB& from);

  inline GenericPB& operator=(const GenericPB& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GenericPB& default_instance();

  void Swap(GenericPB* other);

  // implements Message ----------------------------------------------

  inline GenericPB* New() const { return New(NULL); }

  GenericPB* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GenericPB& from);
  void MergeFrom(const GenericPB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GenericPB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // @@protoc_insertion_point(class_scope:pas.GenericPB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static GenericPB* default_instance_;
};
// -------------------------------------------------------------------

class PlayTrackCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.PlayTrackCommand) */ {
 public:
  PlayTrackCommand();
  virtual ~PlayTrackCommand();

  PlayTrackCommand(const PlayTrackCommand& from);

  inline PlayTrackCommand& operator=(const PlayTrackCommand& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayTrackCommand& default_instance();

  void Swap(PlayTrackCommand* other);

  // implements Message ----------------------------------------------

  inline PlayTrackCommand* New() const { return New(NULL); }

  PlayTrackCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayTrackCommand& from);
  void MergeFrom(const PlayTrackCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayTrackCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // optional uint64 device_id = 2;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 2;
  ::google::protobuf::uint64 device_id() const;
  void set_device_id(::google::protobuf::uint64 value);

  // optional uint64 track_id = 3;
  void clear_track_id();
  static const int kTrackIdFieldNumber = 3;
  ::google::protobuf::uint64 track_id() const;
  void set_track_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pas.PlayTrackCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 device_id_;
  ::google::protobuf::uint64 track_id_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static PlayTrackCommand* default_instance_;
};
// -------------------------------------------------------------------

class PauseDeviceCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.PauseDeviceCommand) */ {
 public:
  PauseDeviceCommand();
  virtual ~PauseDeviceCommand();

  PauseDeviceCommand(const PauseDeviceCommand& from);

  inline PauseDeviceCommand& operator=(const PauseDeviceCommand& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PauseDeviceCommand& default_instance();

  void Swap(PauseDeviceCommand* other);

  // implements Message ----------------------------------------------

  inline PauseDeviceCommand* New() const { return New(NULL); }

  PauseDeviceCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PauseDeviceCommand& from);
  void MergeFrom(const PauseDeviceCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PauseDeviceCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // optional uint64 device_id = 2;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 2;
  ::google::protobuf::uint64 device_id() const;
  void set_device_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pas.PauseDeviceCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 device_id_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static PauseDeviceCommand* default_instance_;
};
// -------------------------------------------------------------------

class ResumeDeviceCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.ResumeDeviceCommand) */ {
 public:
  ResumeDeviceCommand();
  virtual ~ResumeDeviceCommand();

  ResumeDeviceCommand(const ResumeDeviceCommand& from);

  inline ResumeDeviceCommand& operator=(const ResumeDeviceCommand& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResumeDeviceCommand& default_instance();

  void Swap(ResumeDeviceCommand* other);

  // implements Message ----------------------------------------------

  inline ResumeDeviceCommand* New() const { return New(NULL); }

  ResumeDeviceCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResumeDeviceCommand& from);
  void MergeFrom(const ResumeDeviceCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResumeDeviceCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // optional uint64 device_id = 2;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 2;
  ::google::protobuf::uint64 device_id() const;
  void set_device_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pas.ResumeDeviceCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 device_id_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static ResumeDeviceCommand* default_instance_;
};
// -------------------------------------------------------------------

class ClearDeviceCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.ClearDeviceCommand) */ {
 public:
  ClearDeviceCommand();
  virtual ~ClearDeviceCommand();

  ClearDeviceCommand(const ClearDeviceCommand& from);

  inline ClearDeviceCommand& operator=(const ClearDeviceCommand& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClearDeviceCommand& default_instance();

  void Swap(ClearDeviceCommand* other);

  // implements Message ----------------------------------------------

  inline ClearDeviceCommand* New() const { return New(NULL); }

  ClearDeviceCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClearDeviceCommand& from);
  void MergeFrom(const ClearDeviceCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClearDeviceCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // optional uint64 device_id = 2;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 2;
  ::google::protobuf::uint64 device_id() const;
  void set_device_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pas.ClearDeviceCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 device_id_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static ClearDeviceCommand* default_instance_;
};
// -------------------------------------------------------------------

class StopDeviceCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.StopDeviceCommand) */ {
 public:
  StopDeviceCommand();
  virtual ~StopDeviceCommand();

  StopDeviceCommand(const StopDeviceCommand& from);

  inline StopDeviceCommand& operator=(const StopDeviceCommand& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StopDeviceCommand& default_instance();

  void Swap(StopDeviceCommand* other);

  // implements Message ----------------------------------------------

  inline StopDeviceCommand* New() const { return New(NULL); }

  StopDeviceCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StopDeviceCommand& from);
  void MergeFrom(const StopDeviceCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StopDeviceCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // optional uint64 device_id = 2;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 2;
  ::google::protobuf::uint64 device_id() const;
  void set_device_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pas.StopDeviceCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 device_id_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static StopDeviceCommand* default_instance_;
};
// -------------------------------------------------------------------

class WhoDeviceCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.WhoDeviceCommand) */ {
 public:
  WhoDeviceCommand();
  virtual ~WhoDeviceCommand();

  WhoDeviceCommand(const WhoDeviceCommand& from);

  inline WhoDeviceCommand& operator=(const WhoDeviceCommand& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WhoDeviceCommand& default_instance();

  void Swap(WhoDeviceCommand* other);

  // implements Message ----------------------------------------------

  inline WhoDeviceCommand* New() const { return New(NULL); }

  WhoDeviceCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WhoDeviceCommand& from);
  void MergeFrom(const WhoDeviceCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WhoDeviceCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // optional uint64 device_id = 2;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 2;
  ::google::protobuf::uint64 device_id() const;
  void set_device_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pas.WhoDeviceCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 device_id_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static WhoDeviceCommand* default_instance_;
};
// -------------------------------------------------------------------

class WhatDeviceCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.WhatDeviceCommand) */ {
 public:
  WhatDeviceCommand();
  virtual ~WhatDeviceCommand();

  WhatDeviceCommand(const WhatDeviceCommand& from);

  inline WhatDeviceCommand& operator=(const WhatDeviceCommand& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WhatDeviceCommand& default_instance();

  void Swap(WhatDeviceCommand* other);

  // implements Message ----------------------------------------------

  inline WhatDeviceCommand* New() const { return New(NULL); }

  WhatDeviceCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WhatDeviceCommand& from);
  void MergeFrom(const WhatDeviceCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WhatDeviceCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // optional uint64 device_id = 2;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 2;
  ::google::protobuf::uint64 device_id() const;
  void set_device_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pas.WhatDeviceCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 device_id_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static WhatDeviceCommand* default_instance_;
};
// -------------------------------------------------------------------

class TrackCountQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.TrackCountQuery) */ {
 public:
  TrackCountQuery();
  virtual ~TrackCountQuery();

  TrackCountQuery(const TrackCountQuery& from);

  inline TrackCountQuery& operator=(const TrackCountQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrackCountQuery& default_instance();

  void Swap(TrackCountQuery* other);

  // implements Message ----------------------------------------------

  inline TrackCountQuery* New() const { return New(NULL); }

  TrackCountQuery* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrackCountQuery& from);
  void MergeFrom(const TrackCountQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrackCountQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // @@protoc_insertion_point(class_scope:pas.TrackCountQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static TrackCountQuery* default_instance_;
};
// -------------------------------------------------------------------

class ArtistCountQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.ArtistCountQuery) */ {
 public:
  ArtistCountQuery();
  virtual ~ArtistCountQuery();

  ArtistCountQuery(const ArtistCountQuery& from);

  inline ArtistCountQuery& operator=(const ArtistCountQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArtistCountQuery& default_instance();

  void Swap(ArtistCountQuery* other);

  // implements Message ----------------------------------------------

  inline ArtistCountQuery* New() const { return New(NULL); }

  ArtistCountQuery* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArtistCountQuery& from);
  void MergeFrom(const ArtistCountQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ArtistCountQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // @@protoc_insertion_point(class_scope:pas.ArtistCountQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static ArtistCountQuery* default_instance_;
};
// -------------------------------------------------------------------

class FolderCountQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.FolderCountQuery) */ {
 public:
  FolderCountQuery();
  virtual ~FolderCountQuery();

  FolderCountQuery(const FolderCountQuery& from);

  inline FolderCountQuery& operator=(const FolderCountQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FolderCountQuery& default_instance();

  void Swap(FolderCountQuery* other);

  // implements Message ----------------------------------------------

  inline FolderCountQuery* New() const { return New(NULL); }

  FolderCountQuery* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FolderCountQuery& from);
  void MergeFrom(const FolderCountQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FolderCountQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // @@protoc_insertion_point(class_scope:pas.FolderCountQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static FolderCountQuery* default_instance_;
};
// -------------------------------------------------------------------

class SelectQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.SelectQuery) */ {
 public:
  SelectQuery();
  virtual ~SelectQuery();

  SelectQuery(const SelectQuery& from);

  inline SelectQuery& operator=(const SelectQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectQuery& default_instance();

  void Swap(SelectQuery* other);

  // implements Message ----------------------------------------------

  inline SelectQuery* New() const { return New(NULL); }

  SelectQuery* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SelectQuery& from);
  void MergeFrom(const SelectQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SelectQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // optional string column = 2;
  void clear_column();
  static const int kColumnFieldNumber = 2;
  const ::std::string& column() const;
  void set_column(const ::std::string& value);
  void set_column(const char* value);
  void set_column(const char* value, size_t size);
  ::std::string* mutable_column();
  ::std::string* release_column();
  void set_allocated_column(::std::string* column);

  // optional string pattern = 3;
  void clear_pattern();
  static const int kPatternFieldNumber = 3;
  const ::std::string& pattern() const;
  void set_pattern(const ::std::string& value);
  void set_pattern(const char* value);
  void set_pattern(const char* value, size_t size);
  ::std::string* mutable_pattern();
  ::std::string* release_pattern();
  void set_allocated_pattern(::std::string* pattern);

  // @@protoc_insertion_point(class_scope:pas.SelectQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr column_;
  ::google::protobuf::internal::ArenaStringPtr pattern_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static SelectQuery* default_instance_;
};
// -------------------------------------------------------------------

class WhenDeviceCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.WhenDeviceCommand) */ {
 public:
  WhenDeviceCommand();
  virtual ~WhenDeviceCommand();

  WhenDeviceCommand(const WhenDeviceCommand& from);

  inline WhenDeviceCommand& operator=(const WhenDeviceCommand& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WhenDeviceCommand& default_instance();

  void Swap(WhenDeviceCommand* other);

  // implements Message ----------------------------------------------

  inline WhenDeviceCommand* New() const { return New(NULL); }

  WhenDeviceCommand* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WhenDeviceCommand& from);
  void MergeFrom(const WhenDeviceCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WhenDeviceCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // optional uint64 device_id = 2;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 2;
  ::google::protobuf::uint64 device_id() const;
  void set_device_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pas.WhenDeviceCommand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 device_id_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static WhenDeviceCommand* default_instance_;
};
// -------------------------------------------------------------------

class OneInteger : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.OneInteger) */ {
 public:
  OneInteger();
  virtual ~OneInteger();

  OneInteger(const OneInteger& from);

  inline OneInteger& operator=(const OneInteger& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneInteger& default_instance();

  void Swap(OneInteger* other);

  // implements Message ----------------------------------------------

  inline OneInteger* New() const { return New(NULL); }

  OneInteger* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneInteger& from);
  void MergeFrom(const OneInteger& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OneInteger* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // optional uint64 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::uint64 value() const;
  void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pas.OneInteger)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 value_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static OneInteger* default_instance_;
};
// -------------------------------------------------------------------

class OneString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.OneString) */ {
 public:
  OneString();
  virtual ~OneString();

  OneString(const OneString& from);

  inline OneString& operator=(const OneString& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneString& default_instance();

  void Swap(OneString* other);

  // implements Message ----------------------------------------------

  inline OneString* New() const { return New(NULL); }

  OneString* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneString& from);
  void MergeFrom(const OneString& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OneString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // optional string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:pas.OneString)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static OneString* default_instance_;
};
// -------------------------------------------------------------------

class OneFloat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pas.OneFloat) */ {
 public:
  OneFloat();
  virtual ~OneFloat();

  OneFloat(const OneFloat& from);

  inline OneFloat& operator=(const OneFloat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneFloat& default_instance();

  void Swap(OneFloat* other);

  // implements Message ----------------------------------------------

  inline OneFloat* New() const { return New(NULL); }

  OneFloat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OneFloat& from);
  void MergeFrom(const OneFloat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OneFloat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pas.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pas::Type type() const;
  void set_type(::pas::Type value);

  // optional float value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:pas.OneFloat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int type_;
  float value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_commands_2eproto();
  friend void protobuf_AssignDesc_commands_2eproto();
  friend void protobuf_ShutdownFile_commands_2eproto();

  void InitAsDefaultInstance();
  static OneFloat* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Row

// optional .pas.Type type = 1;
inline void Row::clear_type() {
  type_ = 0;
}
inline ::pas::Type Row::type() const {
  // @@protoc_insertion_point(field_get:pas.Row.type)
  return static_cast< ::pas::Type >(type_);
}
inline void Row::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.Row.type)
}

// map<string, string> results = 2;
inline int Row::results_size() const {
  return results_.size();
}
inline void Row::clear_results() {
  results_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Row::results() const {
  // @@protoc_insertion_point(field_map:pas.Row.results)
  return results_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Row::mutable_results() {
  // @@protoc_insertion_point(field_mutable_map:pas.Row.results)
  return results_.MutableMap();
}

// -------------------------------------------------------------------

// DacInfo

// optional .pas.Type type = 1;
inline void DacInfo::clear_type() {
  type_ = 0;
}
inline ::pas::Type DacInfo::type() const {
  // @@protoc_insertion_point(field_get:pas.DacInfo.type)
  return static_cast< ::pas::Type >(type_);
}
inline void DacInfo::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.DacInfo.type)
}

// repeated .pas.Row row = 2;
inline int DacInfo::row_size() const {
  return row_.size();
}
inline void DacInfo::clear_row() {
  row_.Clear();
}
inline const ::pas::Row& DacInfo::row(int index) const {
  // @@protoc_insertion_point(field_get:pas.DacInfo.row)
  return row_.Get(index);
}
inline ::pas::Row* DacInfo::mutable_row(int index) {
  // @@protoc_insertion_point(field_mutable:pas.DacInfo.row)
  return row_.Mutable(index);
}
inline ::pas::Row* DacInfo::add_row() {
  // @@protoc_insertion_point(field_add:pas.DacInfo.row)
  return row_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pas::Row >*
DacInfo::mutable_row() {
  // @@protoc_insertion_point(field_mutable_list:pas.DacInfo.row)
  return &row_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pas::Row >&
DacInfo::row() const {
  // @@protoc_insertion_point(field_list:pas.DacInfo.row)
  return row_;
}

// -------------------------------------------------------------------

// SelectResult

// optional .pas.Type type = 1;
inline void SelectResult::clear_type() {
  type_ = 0;
}
inline ::pas::Type SelectResult::type() const {
  // @@protoc_insertion_point(field_get:pas.SelectResult.type)
  return static_cast< ::pas::Type >(type_);
}
inline void SelectResult::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.SelectResult.type)
}

// repeated .pas.Row row = 2;
inline int SelectResult::row_size() const {
  return row_.size();
}
inline void SelectResult::clear_row() {
  row_.Clear();
}
inline const ::pas::Row& SelectResult::row(int index) const {
  // @@protoc_insertion_point(field_get:pas.SelectResult.row)
  return row_.Get(index);
}
inline ::pas::Row* SelectResult::mutable_row(int index) {
  // @@protoc_insertion_point(field_mutable:pas.SelectResult.row)
  return row_.Mutable(index);
}
inline ::pas::Row* SelectResult::add_row() {
  // @@protoc_insertion_point(field_add:pas.SelectResult.row)
  return row_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pas::Row >*
SelectResult::mutable_row() {
  // @@protoc_insertion_point(field_mutable_list:pas.SelectResult.row)
  return &row_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pas::Row >&
SelectResult::row() const {
  // @@protoc_insertion_point(field_list:pas.SelectResult.row)
  return row_;
}

// -------------------------------------------------------------------

// GenericPB

// optional .pas.Type type = 1;
inline void GenericPB::clear_type() {
  type_ = 0;
}
inline ::pas::Type GenericPB::type() const {
  // @@protoc_insertion_point(field_get:pas.GenericPB.type)
  return static_cast< ::pas::Type >(type_);
}
inline void GenericPB::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.GenericPB.type)
}

// -------------------------------------------------------------------

// PlayTrackCommand

// optional .pas.Type type = 1;
inline void PlayTrackCommand::clear_type() {
  type_ = 0;
}
inline ::pas::Type PlayTrackCommand::type() const {
  // @@protoc_insertion_point(field_get:pas.PlayTrackCommand.type)
  return static_cast< ::pas::Type >(type_);
}
inline void PlayTrackCommand::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.PlayTrackCommand.type)
}

// optional uint64 device_id = 2;
inline void PlayTrackCommand::clear_device_id() {
  device_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayTrackCommand::device_id() const {
  // @@protoc_insertion_point(field_get:pas.PlayTrackCommand.device_id)
  return device_id_;
}
inline void PlayTrackCommand::set_device_id(::google::protobuf::uint64 value) {
  
  device_id_ = value;
  // @@protoc_insertion_point(field_set:pas.PlayTrackCommand.device_id)
}

// optional uint64 track_id = 3;
inline void PlayTrackCommand::clear_track_id() {
  track_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayTrackCommand::track_id() const {
  // @@protoc_insertion_point(field_get:pas.PlayTrackCommand.track_id)
  return track_id_;
}
inline void PlayTrackCommand::set_track_id(::google::protobuf::uint64 value) {
  
  track_id_ = value;
  // @@protoc_insertion_point(field_set:pas.PlayTrackCommand.track_id)
}

// -------------------------------------------------------------------

// PauseDeviceCommand

// optional .pas.Type type = 1;
inline void PauseDeviceCommand::clear_type() {
  type_ = 0;
}
inline ::pas::Type PauseDeviceCommand::type() const {
  // @@protoc_insertion_point(field_get:pas.PauseDeviceCommand.type)
  return static_cast< ::pas::Type >(type_);
}
inline void PauseDeviceCommand::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.PauseDeviceCommand.type)
}

// optional uint64 device_id = 2;
inline void PauseDeviceCommand::clear_device_id() {
  device_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PauseDeviceCommand::device_id() const {
  // @@protoc_insertion_point(field_get:pas.PauseDeviceCommand.device_id)
  return device_id_;
}
inline void PauseDeviceCommand::set_device_id(::google::protobuf::uint64 value) {
  
  device_id_ = value;
  // @@protoc_insertion_point(field_set:pas.PauseDeviceCommand.device_id)
}

// -------------------------------------------------------------------

// ResumeDeviceCommand

// optional .pas.Type type = 1;
inline void ResumeDeviceCommand::clear_type() {
  type_ = 0;
}
inline ::pas::Type ResumeDeviceCommand::type() const {
  // @@protoc_insertion_point(field_get:pas.ResumeDeviceCommand.type)
  return static_cast< ::pas::Type >(type_);
}
inline void ResumeDeviceCommand::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.ResumeDeviceCommand.type)
}

// optional uint64 device_id = 2;
inline void ResumeDeviceCommand::clear_device_id() {
  device_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResumeDeviceCommand::device_id() const {
  // @@protoc_insertion_point(field_get:pas.ResumeDeviceCommand.device_id)
  return device_id_;
}
inline void ResumeDeviceCommand::set_device_id(::google::protobuf::uint64 value) {
  
  device_id_ = value;
  // @@protoc_insertion_point(field_set:pas.ResumeDeviceCommand.device_id)
}

// -------------------------------------------------------------------

// ClearDeviceCommand

// optional .pas.Type type = 1;
inline void ClearDeviceCommand::clear_type() {
  type_ = 0;
}
inline ::pas::Type ClearDeviceCommand::type() const {
  // @@protoc_insertion_point(field_get:pas.ClearDeviceCommand.type)
  return static_cast< ::pas::Type >(type_);
}
inline void ClearDeviceCommand::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.ClearDeviceCommand.type)
}

// optional uint64 device_id = 2;
inline void ClearDeviceCommand::clear_device_id() {
  device_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClearDeviceCommand::device_id() const {
  // @@protoc_insertion_point(field_get:pas.ClearDeviceCommand.device_id)
  return device_id_;
}
inline void ClearDeviceCommand::set_device_id(::google::protobuf::uint64 value) {
  
  device_id_ = value;
  // @@protoc_insertion_point(field_set:pas.ClearDeviceCommand.device_id)
}

// -------------------------------------------------------------------

// StopDeviceCommand

// optional .pas.Type type = 1;
inline void StopDeviceCommand::clear_type() {
  type_ = 0;
}
inline ::pas::Type StopDeviceCommand::type() const {
  // @@protoc_insertion_point(field_get:pas.StopDeviceCommand.type)
  return static_cast< ::pas::Type >(type_);
}
inline void StopDeviceCommand::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.StopDeviceCommand.type)
}

// optional uint64 device_id = 2;
inline void StopDeviceCommand::clear_device_id() {
  device_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 StopDeviceCommand::device_id() const {
  // @@protoc_insertion_point(field_get:pas.StopDeviceCommand.device_id)
  return device_id_;
}
inline void StopDeviceCommand::set_device_id(::google::protobuf::uint64 value) {
  
  device_id_ = value;
  // @@protoc_insertion_point(field_set:pas.StopDeviceCommand.device_id)
}

// -------------------------------------------------------------------

// WhoDeviceCommand

// optional .pas.Type type = 1;
inline void WhoDeviceCommand::clear_type() {
  type_ = 0;
}
inline ::pas::Type WhoDeviceCommand::type() const {
  // @@protoc_insertion_point(field_get:pas.WhoDeviceCommand.type)
  return static_cast< ::pas::Type >(type_);
}
inline void WhoDeviceCommand::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.WhoDeviceCommand.type)
}

// optional uint64 device_id = 2;
inline void WhoDeviceCommand::clear_device_id() {
  device_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 WhoDeviceCommand::device_id() const {
  // @@protoc_insertion_point(field_get:pas.WhoDeviceCommand.device_id)
  return device_id_;
}
inline void WhoDeviceCommand::set_device_id(::google::protobuf::uint64 value) {
  
  device_id_ = value;
  // @@protoc_insertion_point(field_set:pas.WhoDeviceCommand.device_id)
}

// -------------------------------------------------------------------

// WhatDeviceCommand

// optional .pas.Type type = 1;
inline void WhatDeviceCommand::clear_type() {
  type_ = 0;
}
inline ::pas::Type WhatDeviceCommand::type() const {
  // @@protoc_insertion_point(field_get:pas.WhatDeviceCommand.type)
  return static_cast< ::pas::Type >(type_);
}
inline void WhatDeviceCommand::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.WhatDeviceCommand.type)
}

// optional uint64 device_id = 2;
inline void WhatDeviceCommand::clear_device_id() {
  device_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 WhatDeviceCommand::device_id() const {
  // @@protoc_insertion_point(field_get:pas.WhatDeviceCommand.device_id)
  return device_id_;
}
inline void WhatDeviceCommand::set_device_id(::google::protobuf::uint64 value) {
  
  device_id_ = value;
  // @@protoc_insertion_point(field_set:pas.WhatDeviceCommand.device_id)
}

// -------------------------------------------------------------------

// TrackCountQuery

// optional .pas.Type type = 1;
inline void TrackCountQuery::clear_type() {
  type_ = 0;
}
inline ::pas::Type TrackCountQuery::type() const {
  // @@protoc_insertion_point(field_get:pas.TrackCountQuery.type)
  return static_cast< ::pas::Type >(type_);
}
inline void TrackCountQuery::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.TrackCountQuery.type)
}

// -------------------------------------------------------------------

// ArtistCountQuery

// optional .pas.Type type = 1;
inline void ArtistCountQuery::clear_type() {
  type_ = 0;
}
inline ::pas::Type ArtistCountQuery::type() const {
  // @@protoc_insertion_point(field_get:pas.ArtistCountQuery.type)
  return static_cast< ::pas::Type >(type_);
}
inline void ArtistCountQuery::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.ArtistCountQuery.type)
}

// -------------------------------------------------------------------

// FolderCountQuery

// optional .pas.Type type = 1;
inline void FolderCountQuery::clear_type() {
  type_ = 0;
}
inline ::pas::Type FolderCountQuery::type() const {
  // @@protoc_insertion_point(field_get:pas.FolderCountQuery.type)
  return static_cast< ::pas::Type >(type_);
}
inline void FolderCountQuery::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.FolderCountQuery.type)
}

// -------------------------------------------------------------------

// SelectQuery

// optional .pas.Type type = 1;
inline void SelectQuery::clear_type() {
  type_ = 0;
}
inline ::pas::Type SelectQuery::type() const {
  // @@protoc_insertion_point(field_get:pas.SelectQuery.type)
  return static_cast< ::pas::Type >(type_);
}
inline void SelectQuery::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.SelectQuery.type)
}

// optional string column = 2;
inline void SelectQuery::clear_column() {
  column_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SelectQuery::column() const {
  // @@protoc_insertion_point(field_get:pas.SelectQuery.column)
  return column_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SelectQuery::set_column(const ::std::string& value) {
  
  column_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pas.SelectQuery.column)
}
inline void SelectQuery::set_column(const char* value) {
  
  column_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pas.SelectQuery.column)
}
inline void SelectQuery::set_column(const char* value, size_t size) {
  
  column_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pas.SelectQuery.column)
}
inline ::std::string* SelectQuery::mutable_column() {
  
  // @@protoc_insertion_point(field_mutable:pas.SelectQuery.column)
  return column_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SelectQuery::release_column() {
  // @@protoc_insertion_point(field_release:pas.SelectQuery.column)
  
  return column_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SelectQuery::set_allocated_column(::std::string* column) {
  if (column != NULL) {
    
  } else {
    
  }
  column_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), column);
  // @@protoc_insertion_point(field_set_allocated:pas.SelectQuery.column)
}

// optional string pattern = 3;
inline void SelectQuery::clear_pattern() {
  pattern_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SelectQuery::pattern() const {
  // @@protoc_insertion_point(field_get:pas.SelectQuery.pattern)
  return pattern_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SelectQuery::set_pattern(const ::std::string& value) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pas.SelectQuery.pattern)
}
inline void SelectQuery::set_pattern(const char* value) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pas.SelectQuery.pattern)
}
inline void SelectQuery::set_pattern(const char* value, size_t size) {
  
  pattern_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pas.SelectQuery.pattern)
}
inline ::std::string* SelectQuery::mutable_pattern() {
  
  // @@protoc_insertion_point(field_mutable:pas.SelectQuery.pattern)
  return pattern_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SelectQuery::release_pattern() {
  // @@protoc_insertion_point(field_release:pas.SelectQuery.pattern)
  
  return pattern_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SelectQuery::set_allocated_pattern(::std::string* pattern) {
  if (pattern != NULL) {
    
  } else {
    
  }
  pattern_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pattern);
  // @@protoc_insertion_point(field_set_allocated:pas.SelectQuery.pattern)
}

// -------------------------------------------------------------------

// WhenDeviceCommand

// optional .pas.Type type = 1;
inline void WhenDeviceCommand::clear_type() {
  type_ = 0;
}
inline ::pas::Type WhenDeviceCommand::type() const {
  // @@protoc_insertion_point(field_get:pas.WhenDeviceCommand.type)
  return static_cast< ::pas::Type >(type_);
}
inline void WhenDeviceCommand::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.WhenDeviceCommand.type)
}

// optional uint64 device_id = 2;
inline void WhenDeviceCommand::clear_device_id() {
  device_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 WhenDeviceCommand::device_id() const {
  // @@protoc_insertion_point(field_get:pas.WhenDeviceCommand.device_id)
  return device_id_;
}
inline void WhenDeviceCommand::set_device_id(::google::protobuf::uint64 value) {
  
  device_id_ = value;
  // @@protoc_insertion_point(field_set:pas.WhenDeviceCommand.device_id)
}

// -------------------------------------------------------------------

// OneInteger

// optional .pas.Type type = 1;
inline void OneInteger::clear_type() {
  type_ = 0;
}
inline ::pas::Type OneInteger::type() const {
  // @@protoc_insertion_point(field_get:pas.OneInteger.type)
  return static_cast< ::pas::Type >(type_);
}
inline void OneInteger::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.OneInteger.type)
}

// optional uint64 value = 2;
inline void OneInteger::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OneInteger::value() const {
  // @@protoc_insertion_point(field_get:pas.OneInteger.value)
  return value_;
}
inline void OneInteger::set_value(::google::protobuf::uint64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:pas.OneInteger.value)
}

// -------------------------------------------------------------------

// OneString

// optional .pas.Type type = 1;
inline void OneString::clear_type() {
  type_ = 0;
}
inline ::pas::Type OneString::type() const {
  // @@protoc_insertion_point(field_get:pas.OneString.type)
  return static_cast< ::pas::Type >(type_);
}
inline void OneString::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.OneString.type)
}

// optional string value = 2;
inline void OneString::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OneString::value() const {
  // @@protoc_insertion_point(field_get:pas.OneString.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OneString::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pas.OneString.value)
}
inline void OneString::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pas.OneString.value)
}
inline void OneString::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pas.OneString.value)
}
inline ::std::string* OneString::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:pas.OneString.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OneString::release_value() {
  // @@protoc_insertion_point(field_release:pas.OneString.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OneString::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:pas.OneString.value)
}

// -------------------------------------------------------------------

// OneFloat

// optional .pas.Type type = 1;
inline void OneFloat::clear_type() {
  type_ = 0;
}
inline ::pas::Type OneFloat::type() const {
  // @@protoc_insertion_point(field_get:pas.OneFloat.type)
  return static_cast< ::pas::Type >(type_);
}
inline void OneFloat::set_type(::pas::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pas.OneFloat.type)
}

// optional float value = 2;
inline void OneFloat::clear_value() {
  value_ = 0;
}
inline float OneFloat::value() const {
  // @@protoc_insertion_point(field_get:pas.OneFloat.value)
  return value_;
}
inline void OneFloat::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:pas.OneFloat.value)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pas

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pas::Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pas::Type>() {
  return ::pas::Type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_commands_2eproto__INCLUDED
